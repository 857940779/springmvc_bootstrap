<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">


	
	<!-- 配置DataSource数据源 -->  
	<!-- 阿里 druid 数据库连接池 -->
    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close">  
         <!-- 数据库基本信息配置 -->
         <property name = "url" value = "${druid.url}" />  
         <property name = "username" value = "${druid.username}" />  
         <property name = "password" value = "${druid.password}" />  
         <property name = "driverClassName" value = "${druid.driverClassName}" />  
         <property name = "filters" value = "${druid.filters}" />  

         <!-- 最大并发连接数 -->
         <property name = "maxActive" value = "${druid.maxActive}" />

         <!-- 初始化连接数量 -->
         <property name = "initialSize" value = "${druid.initialSize}" />

         <!-- 配置获取连接等待超时的时间 -->
         <property name = "maxWait" value = "${druid.maxWait}" />

         <!-- 最小空闲连接数 -->
         <property name = "minIdle" value = "${druid.minIdle}" />  

         <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name = "timeBetweenEvictionRunsMillis" value ="${druid.timeBetweenEvictionRunsMillis}" />

         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name = "minEvictableIdleTimeMillis" value ="${druid.minEvictableIdleTimeMillis}" />  
         <property name = "validationQuery" value = "${druid.validationQuery}" />  
         <property name = "testWhileIdle" value = "${druid.testWhileIdle}" />  
         <property name = "testOnBorrow" value = "${druid.testOnBorrow}" />  
         <property name = "testOnReturn" value = "${druid.testOnReturn}" />  
         <property name = "maxOpenPreparedStatements" value ="${druid.maxOpenPreparedStatements}" />

         <!-- 打开 removeAbandoned 功能 -->
         <property name = "removeAbandoned" value = "${druid.removeAbandoned}" />
         
         <!-- 1800 秒，也就是 30 分钟 -->
         <property name = "removeAbandonedTimeout" value ="${druid.removeAbandonedTimeout}" />

         <!-- 关闭 abanded 连接时输出错误日志 -->   
         <property name = "logAbandoned" value = "${druid.logAbandoned}" />
    </bean>
	
	<!-- 配置SqlSessionFactoryBean --> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
	   	<property name="dataSource" ref="dataSource"/>  
	   	<property name="configLocation" value="classpath:mybatis-config/mybatis-config.xml"/> 
	   	<!-- mapper和resultmap配置路径   -->
	   	<property name="mapperLocations" value="classpath:mybatis-config/mapper/*-mapper.xml"></property> 
	</bean>
	
	<!-- 通过扫描的模式，扫描在com.cyh.sy.dao.mapper目录下的所有mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	   	<property name="basePackage" value="com.cyh.sy.dao"/>  
	</bean>

      
    <!-- 创建一个sqlSession实例，线程安全的，可以在所有DAO实例共享，原理是将sqlSession，事务与当前线程挂钩 -->
	<bean name="sqlSessionTemplateASS" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="close">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 事务相关控制 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
     
</beans>